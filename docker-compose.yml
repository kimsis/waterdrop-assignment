version: '3.8'
services:

  postgres:
    network_mode: host
    image: "postgres:alpine"
    restart: unless-stopped
    container_name: waterdrop-postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    working_dir: /var/www/html
    volumes:
      - ./docker-compose/postgres:/docker-entrypoint-initdb.d

  api:
    network_mode: host
    build:
      context: api/
      dockerfile: ../docker-compose/Api.Dockerfile
    image: waterdrop-api
    container_name: waterdrop-api
    restart: unless-stopped
    working_dir: /var/www/html/api
    volumes:
      - ./api/:/var/www/html/api
    depends_on:
      - postgres

  #  nginx:
#    user: root
#    image: nginx:stable-alpine
#    container_name: waterdrop-nginx
#    restart: unless-stopped
#    ports:
#      - '8080:80'
#    working_dir: /var/www/html/site/dist
#    volumes:
#      - ./api/:/var/www/html/api
#      - ./site/:/var/www/html/site
#      - ./docker-compose/nginx/waterdrop.conf:/etc/nginx/conf.d/default.conf:rw
#      - ./docker-compose/nginx/logs:/var/nginx/logs:rw
#    depends_on:
#      - api
#      - postgres
#      - site
#    networks:
#      -  waterdrop

  site:
    network_mode: host
    build:
      context: ./site
      dockerfile: ../docker-compose/Site.Dockerfile
    image: waterdrop-site
    container_name: waterdrop-site
    restart: unless-stopped
    working_dir: /var/www/html/site
    volumes:
      - ./site/:/var/www/html/site
#    command: /bin/sh -c "yarn dev"

volumes:
  postgres:
    driver: local
