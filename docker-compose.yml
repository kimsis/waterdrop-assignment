version: '3.8'
services:

  api:
    build:
      args:
        user: root
        uid: 999
      context: ./backend/
      dockerfile: Dockerfile
    image: waterdrop
    container_name: waterdrop-api
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
        - ./backend/:/var/www/html
    ports:
        - "9000:9000"
    networks:
        - waterdrop

  postgres:
    image: "postgres:alpine"
    restart: unless-stopped
    container_name: waterdrop-postgres
    environment:
        POSTGRES_DB: ${DB_DATABASE}
        POSTGRES_USER: ${DB_USERNAME}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
        - '5432:5432'
    working_dir: /var/www/html
    volumes:
        - ./docker-compose/postgres:/docker-entrypoint-initdb.d
    networks:
        - waterdrop

  nginx:
    image: nginx:stable-alpine
    container_name: waterdrop-nginx
    restart: unless-stopped
    ports:
      - '8080:80'
    working_dir: /var/www/html
    volumes:
      - ./backend/:/var/www/html
      - ./docker-compose/nginx/waterdrop.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker-compose/nginx/logs:/var/nginx/logs:rw
    depends_on:
        - api
        - postgres
    networks:
      waterdrop:

networks:
  waterdrop:
    driver: bridge

volumes:
  postgres:
    driver: local
